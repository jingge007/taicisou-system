{"version":3,"file":"js/896.0152a0f3.js","mappings":"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","sources":["webpack://taicisou-system/./src/views/analysis_list.vue","webpack://taicisou-system/./src/utils/common.js","webpack://taicisou-system/./src/api/api.js","webpack://taicisou-system/src/views/analysis_list.vue","webpack://taicisou-system/./src/views/analysis_list.vue?8950","webpack://taicisou-system/./src/views/analysis_list.vue?4591","webpack://taicisou-system/../src/FileSaver.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"analysis_list_box\"},[_c('Upload',{staticClass:\"upload_box\",attrs:{\"multiple\":\"\",\"action\":\"*\",\"type\":\"drag\",\"before-upload\":_vm.handleBeforeUpload}},[_c('Icon',{staticStyle:{\"color\":\"#3399ff\"},attrs:{\"type\":\"ios-cloud-upload\",\"size\":\"52\"}}),_c('p',{staticClass:\"text\"},[_vm._v(\"单击或拖动字幕文件上传\")]),_c('span',{staticClass:\"note_txt\"},[_vm._v(\"*注：当前仅支持上传后缀为srt的字幕文件~~\")])],1),_c('Button',{staticClass:\"options_btn\",attrs:{\"type\":\"primary\",\"size\":\"large\"},on:{\"click\":_vm.importBtn}},[_vm._v(\"导出\")])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const ImgSize = '300.424';   // 宽：300  高：424  /w.h/","import axios from 'axios';\r\n\r\n/**\r\n * @Description: 获取猫眼的电影信息\r\n * @author jing\r\n * @date 2020/11/27\r\n * @params: kw: 关键词, cityId: 城市id, stype: -1\r\n */\r\nexport const GetMaoyan = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios({\r\n      loading: true,\r\n      method: 'get',\r\n      url: '/ajax/search',\r\n      params: data\r\n    }).then(response => {\r\n      resolve(response);\r\n    }).catch(err => {\r\n      reject(err);\r\n    });\r\n  });\r\n};\r\n/**\r\n * @Description: 获取小程序全局唯一后台接口调用凭据（access_token）\r\n * @author jing\r\n * @date 2020/11/27\r\n * @params: grant_type， appid，secret\r\n */\r\n\r\nexport const GetAccessToken = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios({\r\n      loading: true,\r\n      method: 'get',\r\n      url: '/cgi-bin/token',\r\n      params: data\r\n    }).then(response => {\r\n      resolve(response);\r\n    }).catch(err => {\r\n      reject(err);\r\n    });\r\n  });\r\n};\r\n/**\r\n * @Description: 获取小程序新增或活跃用户的画像分布数据\r\n * @author jing\r\n * @date 2020/11/27\r\n * @params: access_token，begin_date，end_date\r\n */\r\n\r\nexport const GetUserPortrait = (data, token) => {\r\n  console.log('+++++++++==', data, token);\r\n  return new Promise((resolve, reject) => {\r\n    axios({\r\n      loading: true,\r\n      method: 'post',\r\n      url: `/datacube/getweanalysisappidvisitdistribution?access_token=${token}`,\r\n      data: data\r\n    }).then(response => {\r\n      resolve(response);\r\n    }).catch(err => {\r\n      reject(err);\r\n    });\r\n  });\r\n};","<template>\r\n  <div class=\"analysis_list_box\">\r\n    <Upload class=\"upload_box\" multiple action=\"*\" type=\"drag\" :before-upload=\"handleBeforeUpload\">\r\n      <Icon type=\"ios-cloud-upload\" size=\"52\" style=\"color: #3399ff\"/>\r\n      <p class=\"text\">单击或拖动字幕文件上传</p>\r\n      <span class=\"note_txt\">*注：当前仅支持上传后缀为srt的字幕文件~~</span>\r\n    </Upload>\r\n    <Button type=\"primary\" class=\"options_btn\" size=\"large\" @click=\"importBtn\">导出</Button>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"less\" scoped>\r\n.analysis_list_box {\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n\r\n  .upload_box {\r\n    width: 60%;\r\n    margin: 50px auto 20px;\r\n    position: relative;\r\n\r\n    /deep/ .ivu-upload-drag {\r\n      padding: 30px 0;\r\n      border: 2px dashed #c1c1c1;\r\n      overflow: inherit;\r\n\r\n      &:hover {\r\n        border: 2px dashed #2d8cf0;\r\n      }\r\n    }\r\n\r\n    .text {\r\n      color: #666;\r\n      font-size: 22px;\r\n      margin-top: 8px;\r\n    }\r\n\r\n    .note_txt {\r\n      color: #D03323;\r\n      font-weight: bold;\r\n      font-size: 15px;\r\n      position: absolute;\r\n      top: -30px;\r\n      left: 0;\r\n    }\r\n  }\r\n\r\n  .options_btn {\r\n    width: 60%;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .modalStyle {\r\n    .ivu-modal-content {\r\n      .model_box {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        .text_box {\r\n          margin-left: 15px;\r\n          display: flex;\r\n          flex-direction: column;\r\n          font-size: 17px;\r\n          color: #333;\r\n          font-weight: bold;\r\n\r\n          .colorStyle {\r\n            margin: 0 6px;\r\n            font-size: 18px;\r\n            color: #2D8CF0;\r\n          }\r\n        }\r\n      }\r\n\r\n      .footer_box {\r\n        .ivu-btn-primary {\r\n          padding: 0 12px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n<script type=\"text/ecmascript-6\">\r\nimport axios from 'axios';\r\nimport {ImgSize} from '@/utils/common';\r\nimport {GetInstitution, GetMaoyan} from '@/api/api';\r\nimport FileSaver from 'file-saver'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      filesData: [],\r\n      subtitleData: []\r\n    };\r\n  },\r\n  created() {\r\n  },\r\n  methods: {\r\n    importBtn() {\r\n      // 将json转换成字符串\r\n      let data = {\r\n        aaa: '账号：323232',\r\n        title: '收到货收到货的发但是公司电话的发挥地方'\r\n      };\r\n      const blob = new Blob([JSON.stringify(data)], {type: \"text/plain;charset=utf-8\"})\r\n      FileSaver.saveAs(blob, `erorr.txt`)\r\n      window.location.reload()\r\n    },\r\n\r\n\r\n    // bbb () {\r\n    //   let query = {\r\n    //     action: 'seek_all',\r\n    //     pageNum: 0,\r\n    //     query: '快乐'\r\n    //   };\r\n    //   GetInstitution(query).then((res) => {\r\n    //     console.log('=============', res);\r\n    //   });\r\n    // },\r\n    handleBeforeUpload(file) {\r\n      this.filesData.push(file);\r\n      return false;\r\n    },\r\n    // 获取字幕内容，发送一个get请求\r\n\r\n    GetSrtInfo(srtUrl, item, info, value) {\r\n      let _this = this;\r\n      let movies_info = info.list[0];\r\n      let img_url = movies_info.img.split('w.h');\r\n      let subtitle_data = {\r\n        title: item.name.split('.srt')[0],\r\n        cover_url: `${img_url[0] + ImgSize + img_url[1]}`,\r\n        subtitle: [],\r\n        movies: movies_info\r\n      };\r\n      axios.get(srtUrl, {\r\n        isbaseUrl: true\r\n      }).then(function (response) {\r\n        let data = response;\r\n        if (data.length > 0) {\r\n          data.map((item) => {\r\n            let textItem = item.split(/\\n/);\r\n            if (textItem.length >= 4) {\r\n              if (textItem[2].indexOf('}') > -1) {\r\n                let cn_len = textItem[2].split('}');\r\n                if (cn_len.length > 2) {\r\n                  textItem[2] = cn_len[cn_len.length - 1];\r\n                } else {\r\n                  textItem[2] = cn_len[1];\r\n                }\r\n              }\r\n              if (textItem[3].indexOf('}') > -1) {\r\n                let es_len = textItem[3].split('}');\r\n                if (es_len.length > 2) {\r\n                  textItem[3] = es_len[es_len.length - 1];\r\n                } else {\r\n                  textItem[3] = es_len[1];\r\n                }\r\n              }\r\n              let es_reg = new RegExp('[A-Za-z]+');\r\n              let cn_reg = new RegExp('[\\\\u4E00-\\\\u9FFF]+', 'g');\r\n              // 当字幕数组第二行为英文的时候\r\n              if (es_reg.test(textItem[2])) {\r\n                let temp = textItem[2];\r\n                textItem[2] = textItem[3];\r\n                textItem[3] = temp;\r\n              }\r\n              if (!cn_reg.test(textItem[3]) && es_reg.test(textItem[3])) {\r\n                subtitle_data.subtitle.push({\r\n                  sort: textItem[0],\r\n                  ch_text: textItem[2],\r\n                  es_test: textItem[3],\r\n                  text: (textItem[2] + textItem[3]).replace((/[a-zA-Z]/), \"\\n\"),\r\n                  start_time: (textItem[1].split(' --> ')[0]).split(',')[0],\r\n                  end_time: (textItem[1].split(' --> ')[1]).split(',')[0]\r\n                });\r\n              }\r\n            }\r\n          });\r\n        }\r\n        _this.subtitleData.push(subtitle_data);\r\n        _this.exportJSON(subtitle_data, movies_info.nm);\r\n        console.log('解析之后的字幕内容', _this.subtitleData);\r\n      }).catch(function (error) {\r\n        console.log('-----请求失败-----', error);\r\n      });\r\n    },\r\n    // 解析字幕的方法\r\n    handerData(data) {\r\n      let _this = this;\r\n      if (data.length > 0) {\r\n        data.map((item) => {\r\n          let srtUrl = URL.createObjectURL(item);\r\n          let title = item.name.split('.srt')[0];\r\n          let query = {\r\n            kw: title,\r\n            cityId: 30,\r\n            stype: -1\r\n          };\r\n          GetMaoyan(query).then((res) => {\r\n            _this.GetSrtInfo(srtUrl, item, res.movies, data);\r\n          });\r\n        });\r\n      }\r\n    },\r\n    // 导出台词搜字幕的数据\r\n    exportJSON(data, title) {\r\n      // 将json转换成字符串\r\n      const blob = new Blob([JSON.stringify(data)], {type: \"\"})\r\n      FileSaver.saveAs(blob, `${title}.json`)\r\n      window.location.reload()\r\n    }\r\n  },\r\n  watch: {\r\n    // 监听上传解析字幕文件\r\n    filesData: {\r\n      handler(data) {\r\n        this.handerData(data);\r\n      },\r\n      deep: true\r\n    },\r\n    // 监听解析成功的文件\r\n    // subtitleData: {\r\n    //   handler(data) {\r\n    //     let _this = this;\r\n    //     if (data.length === _this.filesData.length) {\r\n    //       _this.filesData = [];\r\n    //       _this.subtitleData = [];\r\n    //     }\r\n    //   }\r\n    // }\r\n  }\r\n};\r\n</script>\r\n\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./analysis_list.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./analysis_list.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./analysis_list.vue?vue&type=template&id=5210b704&scoped=true&\"\nimport script from \"./analysis_list.vue?vue&type=script&lang=js&\"\nexport * from \"./analysis_list.vue?vue&type=script&lang=js&\"\nimport style0 from \"./analysis_list.vue?vue&type=style&index=0&id=5210b704&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5210b704\",\n  null\n  \n)\n\nexport default component.exports","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"names":["render","_vm","this","_c","_self","staticClass","attrs","handleBeforeUpload","staticStyle","_v","on","importBtn","staticRenderFns","ImgSize","GetMaoyan","data","Promise","resolve","reject","axios","loading","method","url","params","then","response","catch","err","filesData","subtitleData","created","methods","aaa","title","blob","Blob","JSON","stringify","type","FileSaver","window","location","reload","file","push","GetSrtInfo","srtUrl","item","info","value","_this","movies_info","list","img_url","img","split","subtitle_data","name","cover_url","subtitle","movies","get","isbaseUrl","length","map","textItem","indexOf","cn_len","es_len","es_reg","RegExp","cn_reg","test","temp","sort","ch_text","es_test","text","replace","start_time","end_time","exportJSON","nm","console","log","error","handerData","URL","createObjectURL","query","kw","cityId","stype","res","watch","handler","deep","component","b","a","autoBom","warn","c","d","XMLHttpRequest","open","responseType","onload","g","onerror","send","status","e","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","f","self","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","i","webkitURL","j","createElement","download","rel","href","origin","target","setTimeout","revokeObjectURL","msSaveOrOpenBlob","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","readAsDataURL","l","m","module","exports"],"sourceRoot":""}